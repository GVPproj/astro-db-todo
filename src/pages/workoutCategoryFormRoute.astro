---
import BaseLayout from "../layouts/Base.astro"
import { getSession } from "auth-astro/server"
import handleFormSubmission from "../utils/formHandler"
import { WorkoutCategories, db } from "astro:db"

const session = await getSession(Astro.request)
if (!session) {
  return Astro.redirect("/login", 303)
}

const categories = await db.select().from(WorkoutCategories)

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData()
  await handleFormSubmission(formData)
  return Astro.redirect("/workouts", 303)
}
---

<BaseLayout>
  <div class="form-container">
    <form method="POST" class="sub-form">
      <h2>Add Workout Category</h2>
      <input type="hidden" name="formType" value="workoutCategory" />
      <div class="form-field">
        <label for="name">Category Name</label>
        <input type="text" id="name" name="name" required />
      </div>
      <footer>
        <button type="submit">Add Category</button>
      </footer>
    </form>

    <form method="POST" class="sub-form">
      <h2>Remove Workout Category</h2>
      <input type="hidden" name="formType" value="removeWorkoutCategory" />
      <div class="form-field">
        <label for="categoryId">Select Category</label>
        <select id="categoryId" name="categoryId" required>
          <option value="">Select a category</option>
          {
            categories.map((category) => (
              <option value={category.id}>{category.name}</option>
            ))
          }
        </select>
      </div>
      <div class="warning">
        <p>⚠️ Warning: Removing a category will delete all workouts in that category!</p>
      </div>
      <footer>
        <button type="submit" class="delete-btn">Remove Category</button>
      </footer>
    </form>
  </div>
</BaseLayout>

<style>
  h2 {
    margin-bottom: 1rem;
    font-size: 1.5rem;
  }

  footer {
    width: 100%;
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
    margin-bottom: 1rem;
  }
  
  .form-field {
    display: flex;
    justify-content: space-between;
    width: 100%;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  input, select {
    border-radius: 0.15em;
    padding: 0.5rem;
    border: 1px solid #ccc;
  }

  .form-container {
    max-width: 600px;
    margin: 0 auto;
    padding: 1rem;
  }

  .sub-form {
    margin-bottom: 2rem;
    padding: 1.5rem;
    border: 1px solid #ddd;
    border-radius: 0.25rem;
  }

  button {
    background-color: #4a8;
    color: white;
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.15em;
    cursor: pointer;
  }

  button:hover {
    background-color: #3a7;
  }
  
  .delete-btn {
    background-color: #e55;
  }
  
  .delete-btn:hover {
    background-color: #d44;
  }
  
  .warning {
    background-color: #fff3cd;
    color: #856404;
    padding: 0.75rem;
    margin-bottom: 1rem;
    border-radius: 0.25rem;
    border: 1px solid #ffeeba;
  }
  
  .warning p {
    margin: 0;
    font-size: 0.9rem;
  }

  @media (max-width: 768px) {
    .form-field {
      flex-direction: column;
    }
  }
</style>