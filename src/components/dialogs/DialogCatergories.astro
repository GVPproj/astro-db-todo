---
import { Categories, db } from "astro:db"

const categories = await db.select().from(Categories)
---

<dialog id="categories-dialog">
  <div class="form-container">
    <form method="POST" class="sub-form">
      <h2>Add Todo Category</h2>
      <input type="hidden" name="formType" value="category" />
      <div class="form-field">
        <label for="categoryName">Category Name</label>
        <input type="text" id="categoryName" name="name" required />
      </div>
      <div class="form-actions">
        <button type="submit" class="add-btn">Add Category</button>
      </div>
    </form>
    <form method="POST" class="sub-form">
      <h2>Remove Todo Category</h2>
      <input type="hidden" name="formType" value="removeCategory" />
      <div class="form-field">
        <label for="categoryId">Select Category</label>
        <select id="categoryId" name="categoryId" required>
          <option value="">Select a category</option>
          {
            categories.map((category) => (
              <option value={category.id}>{category.name}</option>
            ))
          }
        </select>
      </div>
      <div class="warning">
        <p>⚠️ Warning: Removing a category will delete all todos in that category!</p>
      </div>
      <div class="form-actions">
        <button type="submit" class="delete-btn">Remove Category</button>
      </div>
    </form>
    <footer>
      <button onclick="this.closest('dialog')?.close()" class="cancel-btn">Close</button>
    </footer>
  </div>
</dialog>

<script>
  const dialog = document.getElementById("categories-dialog")
  const categoriesButton = document.querySelector("#categories")

  if (dialog instanceof HTMLDialogElement) {
    categoriesButton?.addEventListener("click", () => {
      dialog.showModal()
    })
  }
</script>

<style>
  h2 {
    margin-bottom: 1rem;
    font-size: 1.25rem;
    font-weight: 600;
    width: 100%;
  }

  footer {
    width: 100%;
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
    margin-top: 1rem;
  }

  .form-field {
    display: flex;
    justify-content: space-between;
    width: 100%;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .form-actions {
    display: flex;
    justify-content: flex-end;
    width: 100%;
  }

  button {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.15em;
    cursor: pointer;
    font-weight: 500;
  }

  .add-btn {
    background-color: #4a8;
    color: white;
  }

  .add-btn:hover {
    background-color: #3a7;
  }

  .delete-btn {
    background-color: #e55;
    color: white;
  }

  .delete-btn:hover {
    background-color: #d44;
  }

  .cancel-btn {
    background-color: #aaa;
    color: white;
  }

  .cancel-btn:hover {
    background-color: #999;
  }

  input, select {
    border-radius: 0.15em;
    padding: 0.4rem;
    border: 1px solid #ccc;
  }

  .warning {
    background-color: #fff3cd;
    color: #856404;
    padding: 0.75rem;
    margin-bottom: 1rem;
    border-radius: 0.25rem;
    border: 1px solid #ffeeba;
    width: 100%;
  }
  
  .warning p {
    margin: 0;
    font-size: 0.9rem;
  }

  .form-container {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 2rem;
    padding: 1rem;
    min-width: 400px;
  }

  .sub-form {
    display: flex;
    width: 100%;
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
    padding: 1rem;
    border: 1px solid #ddd;
    border-radius: 0.25rem;
  }

  @media (max-width: 768px) {
    .form-field {
      flex-direction: column;
    }
    
    .form-container {
      min-width: auto;
      width: 100%;
    }
  }
</style>
