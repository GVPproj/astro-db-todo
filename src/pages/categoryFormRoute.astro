---
import { Categories, db } from "astro:db"
const categories = await db.select().from(Categories)
import BaseLayout from "../layouts/Base.astro"
import { getSession } from "auth-astro/server"
import handleFormSubmission from "../utils/formHandler"

const session = await getSession(Astro.request)
if (!session) {
  return Astro.redirect("/login", 303)
}

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData()
  await handleFormSubmission(formData)
  return Astro.redirect("/todos", 303)
}
---

<BaseLayout>
  <form method="POST" class="form-container">
    <input type="hidden" name="formType" value="category" />
    <div class="form-field">
      <label for="categoryName">Category Name</label>
      <input type="text" id="categoryName" name="name" required />
    </div>
    <footer>
      <button type="submit">Add Category</button>
    </footer>
  </form>
  <form method="POST" class="form-container" id="remove-form">
    <input type="hidden" name="formType" value="removeCategory" />
    <div class="form-field">
      <label for="categoryId">Remove Category</label>
      <select id="categoryId" name="categoryId" required>
        <option value="">Select a category</option>
        {
          categories.map((category) => (
            <option value={category.id}>{category.name}</option>
          ))
        }
      </select>
    </div>
    <footer>
      <button type="submit" class="remove-btn">Remove Category</button>
    </footer>
  </form>
</BaseLayout>

<script>
  const dialog = document.getElementById("todo-dialog")
  const todoButton = document.querySelector("#todo")

  if (dialog instanceof HTMLDialogElement) {
    todoButton?.addEventListener("click", () => {
      dialog.showModal()
    })
  }
</script>

<style>
  footer {
    width: 100%;
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
  }
  
  .form-field {
    display: flex;
    justify-content: space-between;
    width: 100%;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  input, select {
    border-radius: 0.15em;
    padding: 0.5rem;
    border: 1px solid #ccc;
  }

  .form-container {
    max-width: 600px;
    margin: 0 auto;
    padding: 1rem;
  }

  #remove-form {
    margin-top: 2rem;
  }

  button {
    background-color: #4a8;
    color: white;
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.15em;
    cursor: pointer;
  }

  button:hover {
    background-color: #3a7;
  }

  .remove-btn {
    background-color: #e55;
  }

  .remove-btn:hover {
    background-color: #d44;
  }

  @media (max-width: 768px) {
    .form-field {
      flex-direction: column;
    }
  }
</style>
