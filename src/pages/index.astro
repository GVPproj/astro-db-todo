---
import { Categories, db, ToDos, eq } from "astro:db"
import TodoList from "../components/TodoList.astro"
import TodoForm from "../components/TodoForm.astro"
import { getFormDataValue, calculateNewStreak } from "../utils/formUtils"

// Handle POST requests with a redirect
if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData()
  const formType = formData.get("formType")

  if (formType === "todo") {
    // Create a new ToDo
    const categoryId = formData.get("categoryId")
    const name = formData.get("name")
    if (typeof categoryId === "string" && typeof name === "string") {
      await db.insert(ToDos).values({
        categoryId: categoryId,
        name,
        checked: false,
        streak: 0,
        id: crypto.randomUUID(),
      })
    }
  } else if (formType === "category") {
    // Create a new Category
    const name = formData.get("name")
    if (typeof name === "string") {
      await db.insert(Categories).values({
        name,
        id: crypto.randomUUID(),
      })
    }
  } else if (formType === "updateTodo") {
    // Update Streaks / Checkboxes
    const todoId = getFormDataValue(formData, "todoId")
    const streakValue = getFormDataValue(formData, "streakValue")
    const isChecked = formData.get("checked") === "on"
    if (todoId) {
      const newStreakValue = calculateNewStreak(streakValue, isChecked)
      await db
        .update(ToDos)
        .set({
          checked: isChecked,
          streak: newStreakValue,
        })
        .where(eq(ToDos.id, todoId))
    }
  }

  // Return a redirect response
  return Astro.redirect("/", 303)
}

const categories = await db.select().from(Categories)
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="color-scheme" content="dark" />
    <title>Todo App with Streaks</title>
    <script>
      document.documentElement.style.setProperty(
        "--color-bg",
        "hsl(256, 15%, 12%)"
      )
      document.documentElement.style.setProperty(
        "--color-text",
        "hsl(256, 10%, 90%)"
      )
    </script>
  </head>
  <body>
    <div class="container">
      <TodoList />
      <TodoForm />
    </div>
  </body>
</html>

<style>
  :root {
    --color-border: hsl(256, 15%, 25%);
    --color-link: hsl(265, 80%, 65%);
    --color-link-hover: hsl(265, 90%, 75%);
  }
  html {
    font-family: monospace;
    background-color: var(--color-bg);
    color: var(--color-text);
  }
  body {
    display: grid;
    place-content: center;
  }
  /* Base checkbox styling */
  button {
    background-color: var(--color-link);
    color: var(--color-bg);
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
  }
  .container {
    display: flex;
    gap: 3rem;
    padding: 1rem;
    margin: 0 auto;

    max-width: 1024px;
    line-height: 1.5;
  }
</style>
