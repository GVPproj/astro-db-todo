---
import { Categories, ToDos, db } from "astro:db"
import { getSession } from "auth-astro/server"

const session = await getSession(Astro.request)

const categories = await db.select().from(Categories)
const workoutCategories = await db.select().from(WorkoutCategories)

import DialogTodo from "./dialogs/DialogTodo.astro"
import DialogCatergories from "./dialogs/DialogCatergories.astro"
import DialogWorkoutCategories from "./dialogs/DialogWorkoutCategories.astro"
import { WorkoutCategories } from "astro:db"
import DialogWorkout from "./dialogs/DialogWorkout.astro"
---

<header>
  {
    session ? (
      <div id="actions">
        <p>Todos</p>
        {categories.length > 0 && <button id="todo">Todo</button>}
        <button id="categories">Category</button>
        <p>Workouts</p>
        {workoutCategories.length > 0 && <button id="workout">Workout</button>}
        <button id="workoutCategories">Workout Category</button>
        <button id="logout">Logout</button>
      </div>
    ) : (
      <button id="login">Login</button>
    )
  }
  <DialogTodo />
  <DialogWorkout />
  <DialogCatergories />
  <DialogWorkoutCategories />
</header>

<div class="mobile-nav">
  <button id="hamburger" aria-label="Menu">
    <span class="hamburger-icon"></span>
  </button>

  <nav class="mobile-menu" id="mobile-menu">
    {
      session ? (
        <div class="mobile-menu-content">
          <div class="section">
            <h3>Todos</h3>
            {categories.length > 0 && <a href="/todoFormRoute">Add Todo</a>}
            <a href="/categoryFormRoute">Manage Categories</a>
            <a href="/todos">View Todos</a>
          </div>
          <div class="section">
            <h3>Workouts</h3>
            {workoutCategories.length > 0 && (
              <a href="/workoutFormRoute">Add Workout</a>
            )}
            <a href="/workoutCategoryFormRoute">Manage Categories</a>
            <a href="/workouts">View Workouts</a>
          </div>
          <div class="section">
            <button id="logoutMobile">Logout</button>
          </div>
        </div>
      ) : (
        <div class="mobile-menu-content">
          <button id="loginMobile">Login</button>
        </div>
      )
    }
  </nav>
</div>

<script>
  const { signIn, signOut } = await import("auth-astro/client")

  // Desktop navigation
  const login = document.querySelector("#login")
  const logout = document.querySelector("#logout")

  // Mobile navigation
  const loginMobile = document.querySelector("#loginMobile")
  const logoutMobile = document.querySelector("#logoutMobile")
  const hamburger = document.querySelector("#hamburger")
  const mobileMenu = document.querySelector("#mobile-menu")

  // Authentication
  login?.addEventListener("click", () => signIn("github"))
  loginMobile?.addEventListener("click", () => signIn("github"))
  logout?.addEventListener("click", () => signOut())
  logoutMobile?.addEventListener("click", () => signOut())

  // Mobile menu toggle
  hamburger?.addEventListener("click", () => {
    mobileMenu?.classList.toggle("open")
    hamburger.classList.toggle("active")
  })

  // Close mobile menu when clicking outside
  document.addEventListener("click", (event) => {
    const isClickInsideMenu = mobileMenu?.contains(event.target as Node)
    const isClickOnHamburger = hamburger?.contains(event.target as Node)

    if (
      mobileMenu?.classList.contains("open") &&
      !isClickInsideMenu &&
      !isClickOnHamburger
    ) {
      mobileMenu?.classList.remove("open")
      hamburger?.classList.remove("active")
    }
  })
</script>

<style>
  header {
    padding: 2rem;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: space-between;
    gap: 2rem;
    border-top: none;
    border-right: 1px solid var(--color-border);
  }

  a {
    display: grid;
    place-content: center;
    text-decoration: none;
    font-family: inherit;
    background-color: var(--color-bg);
    color: var(--color-bg);
    border: 2px solid var(--color-border);
    color: var(--color-text);
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    cursor: pointer;
  }

  a:hover {
    background-color: var(--color-link);
  }

  #actions {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    flex: 1;
  }

  button:last-of-type {
    margin-top: auto;
  }

  /* Mobile navigation styles */
  .mobile-nav {
    display: none;
  }

  @media (max-width: 768px) {
    header {
      display: none;
    }

    .mobile-nav {
      display: block;
      position: fixed;
      top: 0;
      right: 0;
      z-index: 100;
    }

    #hamburger {
      display: block;
      width: 48px;
      height: 48px;
      background: var(--color-bg);
      border: 1px solid var(--color-border);
      position: relative;
      margin: 0.5rem;
      cursor: pointer;
      padding: 0;
      border-radius: 50%;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      z-index: 101; /* Above the menu */
    }

    .hamburger-icon {
      display: block;
      width: 24px;
      height: 3px;
      background-color: var(--color-text);
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      transition: background-color 0.3s;
    }

    .hamburger-icon::before,
    .hamburger-icon::after {
      content: "";
      display: block;
      width: 24px;
      height: 3px;
      background-color: var(--color-text);
      position: absolute;
      transition: transform 0.3s;
    }

    .hamburger-icon::before {
      top: -8px;
    }

    .hamburger-icon::after {
      bottom: -8px;
    }

    #hamburger.active .hamburger-icon {
      background-color: transparent;
    }

    #hamburger.active .hamburger-icon::before {
      transform: rotate(45deg);
      top: 0;
    }

    #hamburger.active .hamburger-icon::after {
      transform: rotate(-45deg);
      bottom: 0;
    }

    .mobile-menu {
      display: block;
      position: fixed;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background-color: var(--color-bg);
      transform: translateX(100%);
      transition: transform 0.3s ease;
      z-index: 99;
      overflow-y: auto;
      box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
    }

    .mobile-menu.open {
      transform: translateX(0);
    }

    .mobile-menu-content {
      padding: 4rem 1.5rem 1.5rem 1.5rem; /* Extra padding at top to avoid hamburger */
      display: flex;
      flex-direction: column;
      gap: 2rem;
      height: 100%;
    }

    .section {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .section h3 {
      margin: 0;
      padding-bottom: 0.5rem;
      border-bottom: 1px solid var(--color-border);
      font-size: 1.1rem;
    }

    .mobile-menu a {
      display: block;
      padding: 0.75rem 1rem;
      text-decoration: none;
      color: var(--color-text);
      border: 1px solid var(--color-border);
      border-radius: 0.25rem;
      font-size: 1rem;
      text-align: center;
    }

    .mobile-menu button {
      width: 100%;
      padding: 0.75rem 1rem;
      font-size: 1rem;
      margin-top: 0;
    }

    #logoutMobile {
      background-color: #e55;
      color: white;
      border: none;
    }
  }
</style>
